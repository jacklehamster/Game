{"version":3,"sources":["../../../../lib/jsgif/html/gif.js"],"names":["bitsToNum","ba","reduce","s","n","byteToBitArr","bite","a","i","push","Stream","data","len","length","pos","readByte","Error","charCodeAt","readBytes","bytes","read","String","fromCharCode","readUnsigned","lzwDecode","minCodeSize","readCode","size","code","output","clearCode","eoiCode","codeSize","dict","clear","last","concat","apply","parseGIF","st","handler","parseCT","entries","ct","readSubBlocks","parseHeader","hdr","sig","ver","width","height","bits","gctFlag","shift","colorRes","splice","sorted","gctSize","bgColor","pixelAspectRatio","gct","parseExt","block","parseGCExt","blockSize","reserved","disposalMethod","userInput","transparencyGiven","delayTime","transparencyIndex","terminator","gce","parseComExt","comment","com","parsePTExt","ptHeader","ptData","pte","parseAppExt","parseNetscapeExt","unknown","iterations","app","NETSCAPE","parseUnknownAppExt","appData","identifier","authCode","parseUnknownExt","label","extType","parseImg","img","deinterlace","pixels","newPixels","Array","rows","cpRow","toRow","fromRow","fromPixels","slice","offsets","steps","pass","leftPos","topPos","lctFlag","interlaced","lctSize","lct","lzwMinCodeSize","lzwData","parseBlock","sentinel","type","eof","toString","setTimeout","parse","exports"],"mappings":"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","file":"gif.js","sourcesContent":["// Generic functions\nvar bitsToNum = function(ba) {\n  return ba.reduce(function(s, n) { return s * 2 + n; }, 0);\n};\n\nvar byteToBitArr = function(bite) {\n  var a = [];\n  for (var i = 7; i >= 0; i--) {\n    a.push(!!(bite & (1 << i)));\n  }\n  return a;\n};\n\n// Stream\n/**\n * @constructor\n */ // Make compiler happy.\nvar Stream = function(data) {\n  this.data = data;\n  this.len = this.data.length;\n  this.pos = 0;\n\n  this.readByte = function() {\n    if (this.pos >= this.data.length) {\n      throw new Error('Attempted to read past end of stream.');\n    }\n    return data.charCodeAt(this.pos++) & 0xFF;\n  };\n\n  this.readBytes = function(n) {\n    var bytes = [];\n    for (var i = 0; i < n; i++) {\n      bytes.push(this.readByte());\n    }\n    return bytes;\n  };\n\n  this.read = function(n) {\n    var s = '';\n    for (var i = 0; i < n; i++) {\n      s += String.fromCharCode(this.readByte());\n    }\n    return s;\n  };\n\n  this.readUnsigned = function() { // Little-endian.\n    var a = this.readBytes(2);\n    return (a[1] << 8) + a[0];\n  };\n};\n\nvar lzwDecode = function(minCodeSize, data) {\n  // TODO: Now that the GIF parser is a bit different, maybe this should get an array of bytes instead of a String?\n  var pos = 0; // Maybe this streaming thing should be merged with the Stream?\n\n  var readCode = function(size) {\n    var code = 0;\n    for (var i = 0; i < size; i++) {\n      if (data.charCodeAt(pos >> 3) & (1 << (pos & 7))) {\n        code |= 1 << i;\n      }\n      pos++;\n    }\n    return code;\n  };\n\n  var output = [];\n\n  var clearCode = 1 << minCodeSize;\n  var eoiCode = clearCode + 1;\n\n  var codeSize = minCodeSize + 1;\n\n  var dict = [];\n\n  var clear = function() {\n    dict = [];\n    codeSize = minCodeSize + 1;\n    for (var i = 0; i < clearCode; i++) {\n      dict[i] = [i];\n    }\n    dict[clearCode] = [];\n    dict[eoiCode] = null;\n\n  };\n\n  var code;\n  var last;\n\n  while (true) {\n    last = code;\n    code = readCode(codeSize);\n\n    if (code === clearCode) {\n      clear();\n      continue;\n    }\n    if (code === eoiCode) break;\n\n    if (code < dict.length) {\n      if (last !== clearCode) {\n        dict.push(dict[last].concat(dict[code][0]));\n      }\n    } else {\n      if (code !== dict.length) throw new Error('Invalid LZW code.');\n      dict.push(dict[last].concat(dict[last][0]));\n    }\n    output.push.apply(output, dict[code]);\n\n    if (dict.length === (1 << codeSize) && codeSize < 12) {\n      // If we're at the last code and codeSize is 12, the next code will be a clearCode, and it'll be 12 bits long.\n      codeSize++;\n    }\n  }\n\n  // I don't know if this is technically an error, but some GIFs do it.\n  //if (Math.ceil(pos / 8) !== data.length) throw new Error('Extraneous LZW bytes.');\n  return output;\n};\n\n// The actual parsing; returns an object with properties.\nvar parseGIF = function(st, handler) {\n  handler || (handler = {});\n\n  // LZW (GIF-specific)\n  var parseCT = function(entries) { // Each entry is 3 bytes, for RGB.\n    var ct = [];\n    for (var i = 0; i < entries; i++) {\n      ct.push(st.readBytes(3));\n    }\n    return ct;\n  };\n\n  var readSubBlocks = function() {\n      var size, data;\n      data = '';\n      do {\n        size = st.readByte();\n        data += st.read(size);\n      } while (size !== 0);\n      return data;\n  };\n\n  var parseHeader = function() {\n    var hdr = {};\n    hdr.sig = st.read(3);\n    hdr.ver = st.read(3);\n    if (hdr.sig !== 'GIF') throw new Error('Not a GIF file.'); // XXX: This should probably be handled more nicely.\n\n    hdr.width = st.readUnsigned();\n    hdr.height = st.readUnsigned();\n\n    var bits = byteToBitArr(st.readByte());\n    hdr.gctFlag = bits.shift();\n    hdr.colorRes = bitsToNum(bits.splice(0, 3));\n    hdr.sorted = bits.shift();\n    hdr.gctSize = bitsToNum(bits.splice(0, 3));\n\n    hdr.bgColor = st.readByte();\n    hdr.pixelAspectRatio = st.readByte(); // if not 0, aspectRatio = (pixelAspectRatio + 15) / 64\n\n    if (hdr.gctFlag) {\n      hdr.gct = parseCT(1 << (hdr.gctSize + 1));\n    }\n    handler.hdr && handler.hdr(hdr);\n  };\n\n  var parseExt = function(block) {\n    var parseGCExt = function(block) {\n      var blockSize = st.readByte(); // Always 4\n\n      var bits = byteToBitArr(st.readByte());\n      block.reserved = bits.splice(0, 3); // Reserved; should be 000.\n      block.disposalMethod = bitsToNum(bits.splice(0, 3));\n      block.userInput = bits.shift();\n      block.transparencyGiven = bits.shift();\n\n      block.delayTime = st.readUnsigned();\n\n      block.transparencyIndex = st.readByte();\n\n      block.terminator = st.readByte();\n\n      handler.gce && handler.gce(block);\n    };\n\n    var parseComExt = function(block) {\n      block.comment = readSubBlocks();\n      handler.com && handler.com(block);\n    };\n\n    var parsePTExt = function(block) {\n      // No one *ever* uses this. If you use it, deal with parsing it yourself.\n      var blockSize = st.readByte(); // Always 12\n      block.ptHeader = st.readBytes(12);\n      block.ptData = readSubBlocks();\n      handler.pte && handler.pte(block);\n    };\n\n    var parseAppExt = function(block) {\n      var parseNetscapeExt = function(block) {\n        var blockSize = st.readByte(); // Always 3\n        block.unknown = st.readByte(); // ??? Always 1? What is this?\n        block.iterations = st.readUnsigned();\n        block.terminator = st.readByte();\n        handler.app && handler.app.NETSCAPE && handler.app.NETSCAPE(block);\n      };\n\n      var parseUnknownAppExt = function(block) {\n          block.appData = readSubBlocks();\n          // FIXME: This won't work if a handler wants to match on any identifier.\n          handler.app && handler.app[block.identifier] && handler.app[block.identifier](block);\n      };\n\n      var blockSize = st.readByte(); // Always 11\n      block.identifier = st.read(8);\n      block.authCode = st.read(3);\n      switch (block.identifier) {\n        case 'NETSCAPE':\n          parseNetscapeExt(block);\n          break;\n        default:\n          parseUnknownAppExt(block);\n          break;\n      }\n    };\n\n    var parseUnknownExt = function(block) {\n        block.data = readSubBlocks();\n        handler.unknown && handler.unknown(block);\n    };\n\n    block.label = st.readByte();\n    switch (block.label) {\n      case 0xF9:\n        block.extType = 'gce';\n        parseGCExt(block);\n        break;\n      case 0xFE:\n        block.extType = 'com';\n        parseComExt(block);\n        break;\n      case 0x01:\n        block.extType = 'pte';\n        parsePTExt(block);\n        break;\n      case 0xFF:\n        block.extType = 'app';\n        parseAppExt(block);\n        break;\n      default:\n        block.extType = 'unknown';\n        parseUnknownExt(block);\n        break;\n    }\n  };\n\n  var parseImg = function(img) {\n    var deinterlace = function(pixels, width) {\n      // Of course this defeats the purpose of interlacing. And it's *probably*\n      // the least efficient way it's ever been implemented. But nevertheless...\n\n      var newPixels = new Array(pixels.length);\n      var rows = pixels.length / width;\n      var cpRow = function(toRow, fromRow) {\n        var fromPixels = pixels.slice(fromRow * width, (fromRow + 1) * width);\n        newPixels.splice.apply(newPixels, [toRow * width, width].concat(fromPixels));\n      };\n\n      // See appendix E.\n      var offsets = [0,4,2,1];\n      var steps   = [8,8,4,2];\n\n      var fromRow = 0;\n      for (var pass = 0; pass < 4; pass++) {\n        for (var toRow = offsets[pass]; toRow < rows; toRow += steps[pass]) {\n          cpRow(toRow, fromRow)\n          fromRow++;\n        }\n      }\n\n      return newPixels;\n    };\n\n    img.leftPos = st.readUnsigned();\n    img.topPos = st.readUnsigned();\n    img.width = st.readUnsigned();\n    img.height = st.readUnsigned();\n\n    var bits = byteToBitArr(st.readByte());\n    img.lctFlag = bits.shift();\n    img.interlaced = bits.shift();\n    img.sorted = bits.shift();\n    img.reserved = bits.splice(0, 2);\n    img.lctSize = bitsToNum(bits.splice(0, 3));\n\n    if (img.lctFlag) {\n      img.lct = parseCT(1 << (img.lctSize + 1));\n    }\n\n    img.lzwMinCodeSize = st.readByte();\n\n    var lzwData = readSubBlocks();\n\n    img.pixels = lzwDecode(img.lzwMinCodeSize, lzwData);\n\n    if (img.interlaced) { // Move\n      img.pixels = deinterlace(img.pixels, img.width);\n    }\n\n    handler.img && handler.img(img);\n  };\n\n  var parseBlock = function() {\n    var block = {};\n    block.sentinel = st.readByte();\n\n    switch (String.fromCharCode(block.sentinel)) { // For ease of matching\n      case '!':\n        block.type = 'ext';\n        parseExt(block);\n        break;\n      case ',':\n        block.type = 'img';\n        parseImg(block);\n        break;\n      case ';':\n        block.type = 'eof';\n        handler.eof && handler.eof(block);\n        break;\n      default:\n        throw new Error('Unknown block: 0x' + block.sentinel.toString(16)); // TODO: Pad this with a 0.\n    }\n\n    if (block.type !== 'eof') setTimeout(parseBlock, 0);\n  };\n\n  var parse = function() {\n    parseHeader();\n    setTimeout(parseBlock, 0);\n  };\n\n  parse();\n};\n\n// BEGIN_NON_BOOKMARKLET_CODE\nif (typeof exports !== 'undefined') {\n  exports.Stream = Stream;\n  exports.parseGIF = parseGIF;\n}\n// END_NON_BOOKMARKLET_CODE\n"]}