{"version":3,"sources":["../../../lib/jsgif/h"],"names":["util","require","Stream","parseGIF","log","console","showBool","b","showColor","rgb","showHex","n","hexChars","showDisposalMethod","dm","map","doHdr","hdr","ver","width","height","gctFlag","gct","length","colorRes","sorted","bgColor","pixelAspectRatio","doGCE","gce","disposalMethod","userInput","transparencyGiven","transparencyIndex","delayTime","doImg","img","leftPos","topPos","lctFlag","lct","interlaced","pixels","doNetscape","block","iterations","doCom","com","comment","doEOF","eof","doUnknownApp","doUnknownExt","handler","app","NETSCAPE","unknown","process","argv","forEach","arg","i","puts","s","data","readFileSync","toString","stream"],"mappings":";;AAEA,IAAIA,OAAOC,QAAQ,MAAR,CAAX;AACA,IAAIC,SAASD,QAAQ,OAAR,EAAiBC,MAA9B;AACA,IAAIC,WAAWF,QAAQ,OAAR,EAAiBE,QAAhC;;AAEA,IAAIC,MAAMC,QAAQD,GAAlB;;AAEA,IAAIE,WAAW,SAAXA,QAAW,CAASC,CAAT,EAAY;AACzB,SAAOA,IAAI,KAAJ,GAAY,IAAnB;AACD,CAFD;;AAIA,IAAIC,YAAY,SAAZA,SAAY,CAASC,GAAT,EAAc;AAC5B;AACA,MAAIC,UAAU,SAAVA,OAAU,CAASC,CAAT,EAAY;AAAE;AAC1B,QAAIC,WAAW,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoC,GAApC,EAAyC,GAAzC,EAA8C,GAA9C,EAAmD,GAAnD,EAAwD,GAAxD,EAA6D,GAA7D,EAAkE,GAAlE,EAAuE,GAAvE,EAA4E,GAA5E,CAAf;AACA,WAAOA,SAAUD,MAAM,CAAP,GAAY,GAArB,IAA4BC,SAASD,IAAI,GAAb,CAAnC;AACD,GAHD;AAIA,SAAO,MAAMD,QAAQD,IAAI,CAAJ,CAAR,CAAN,GAAwBC,QAAQD,IAAI,CAAJ,CAAR,CAAxB,GAA0CC,QAAQD,IAAI,CAAJ,CAAR,CAAjD;AACD,CAPD;;AASA,IAAII,qBAAqB,SAArBA,kBAAqB,CAASC,EAAT,EAAa;AACpC,MAAIC,MAAM;AACR,OAAG,MADK;AAER,OAAG,gBAFK;AAGR,OAAG,uBAHK;AAIR,OAAG;AAJK,GAAV;AAMA,SAAOA,IAAID,EAAJ,KAAW,SAAlB;AACD,CARD;;AAUA,IAAIE,QAAQ,SAARA,KAAQ,CAASC,GAAT,EAAc;AACxBb,MAAI,SAAJ;AACAA,MAAI,eAAJ,EAAqBa,IAAIC,GAAzB;AACAd,MAAI,eAAJ,EAAqBa,IAAIE,KAAzB,EAAgCF,IAAIG,MAApC;AACAhB,MAAI,aAAJ,EAAmBE,SAASW,IAAII,OAAb,CAAnB,EAA0CJ,IAAII,OAAJ,GAAc,OAAOJ,IAAIK,GAAJ,CAAQC,MAAf,GAAwB,WAAtC,GAAoD,EAA9F;AACAnB,MAAI,wBAAJ,EAA8Ba,IAAIO,QAAlC;AACApB,MAAI,cAAJ,EAAoBE,SAASW,IAAIQ,MAAb,CAApB;AACArB,MAAI,6BAAJ,EAAmCa,IAAII,OAAJ,GAAcb,UAAUS,IAAIS,OAAd,CAAd,GAAuC,QAA1E,EAAoFT,IAAIS,OAAxF;AACAtB,MAAI,gCAAJ,EAAsCa,IAAIU,gBAA1C;AACD,CATD;;AAWA,IAAIC,QAAQ,SAARA,KAAQ,CAASC,GAAT,EAAc;AACxBzB,MAAI,MAAJ;AACAA,MAAI,4BAAJ,EAAkCyB,IAAIC,cAAtC,EAAsDjB,mBAAmBgB,IAAIC,cAAvB,CAAtD;AACA1B,MAAI,2BAAJ,EAAiCE,SAASuB,IAAIE,SAAb,CAAjC;AACA3B,MAAI,4BAAJ,EAAkCE,SAASuB,IAAIG,iBAAb,CAAlC,EACkCH,IAAIG,iBAAJ,GAAwB,cAAcH,IAAII,iBAAlB,GAAsC,GAA9D,GAAoE,EADtG;AAEA7B,MAAI,kBAAJ,EAAwByB,IAAIK,SAA5B;AACD,CAPD;;AASA,IAAIC,QAAQ,SAARA,KAAQ,CAASC,GAAT,EAAc;AACxBhC,MAAI,mBAAJ;AACAA,MAAI,yBAAJ,EAA+BgC,IAAIjB,KAAnC,EAA0CiB,IAAIhB,MAA9C,EAAsDgB,IAAIC,OAA1D,EAAmED,IAAIE,MAAvE;AACAlC,MAAI,aAAJ,EAAmBE,SAAS8B,IAAIG,OAAb,CAAnB,EAA0CH,IAAIG,OAAJ,GAAc,OAAOH,IAAII,GAAJ,CAAQjB,MAAf,GAAwB,WAAtC,GAAoD,EAA9F;AACAnB,MAAI,kBAAJ,EAAwBE,SAAS8B,IAAIK,UAAb,CAAxB;AACArC,MAAI,aAAJ,EAAmBgC,IAAIM,MAAJ,CAAWnB,MAA9B;AACD,CAND;;AAQA,IAAIoB,aAAa,SAAbA,UAAa,CAASC,KAAT,EAAgB;AAC/BxC,MAAI,iCAAJ;AACAA,MAAI,oBAAJ,EAA0BwC,MAAMC,UAAhC,EAA4CD,MAAMC,UAAN,KAAqB,CAArB,GAAyB,aAAzB,GAAyC,EAArF;AACD,CAHD;;AAKA,IAAIC,QAAQ,SAARA,KAAQ,CAASC,GAAT,EAAc;AACxB3C,MAAI,oBAAJ;AACAA,MAAI,wBAAJ,EAA8B2C,IAAIC,OAAlC;AACD,CAHD;;AAKA,IAAIC,QAAQ,SAARA,KAAQ,CAASC,GAAT,EAAc;AACxB9C,MAAI,KAAJ;AACD,CAFD;;AAIA,IAAI+C,eAAe,SAAfA,YAAe,CAASP,KAAT,EAAgB,CAClC,CADD;;AAGA,IAAIQ,eAAe,SAAfA,YAAe,CAASR,KAAT,EAAgB,CAClC,CADD;;AAGA,IAAIS,UAAU;AACZpC,OAAKD,KADO;AAEZoB,OAAKD,KAFO;AAGZN,OAAKD,KAHO;AAIZmB,OAAKD,KAJO;AAKZQ,OAAK;AACHC,cAAUZ,UADP;AAEHa,aAASL;AAFN,GALO;AASZD,OAAKD;AATO,CAAd;;AAaAQ,QAAQC,IAAR,CAAaC,OAAb,CAAqB,UAAUC,GAAV,EAAeC,CAAf,EAAkB;AAAE;AACvC,MAAIA,IAAI,CAAR,EAAW;AACT7D,SAAK8D,IAAL,CAAUF,GAAV;AACA5D,SAAK8D,IAAL,CAAW,UAAUnD,CAAV,EAAa;AAAE,UAAIoD,IAAI,EAAR,CAAY,KAAK,IAAIF,IAAI,CAAb,EAAgBA,IAAIlD,CAApB,EAAuBkD,GAAvB,EAA4B;AAAEE,aAAK,GAAL;AAAW,QAAE,OAAOA,CAAP;AAAW,KAAjF,CAAkFH,IAAIrC,MAAtF,CAAX,EAFS,CAEmG;AAC5G,QAAIyC,OAAO/D,QAAQ,IAAR,EAAcgE,YAAd,CAA2BL,GAA3B,EAAgCM,QAAhC,CAAyC,QAAzC,CAAX;AACA,QAAIC,SAAS,IAAIjE,MAAJ,CAAW8D,IAAX,CAAb;AACA7D,aAASgE,MAAT,EAAiBd,OAAjB;AACD;AACF,CARD","file":"h.js","sourcesContent":["\n\nvar util = require('util');\nvar Stream = require('./gif').Stream;\nvar parseGIF = require('./gif').parseGIF;\n\nvar log = console.log;\n\nvar showBool = function(b) {\n  return b ? 'yes' : 'no';\n};\n\nvar showColor = function(rgb) {\n  // FIXME When I have an Internet connection.\n  var showHex = function(n) { // Two-digit code.\n    var hexChars = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F'];\n    return hexChars[(n >>> 4) & 0xF] + hexChars[n & 0xF];\n  };\n  return '#' + showHex(rgb[0]) + showHex(rgb[1]) + showHex(rgb[2]);\n};\n\nvar showDisposalMethod = function(dm) {\n  var map = {\n    0: 'None',\n    1: 'Do not dispose',\n    2: 'Restore to background',\n    3: 'Restore to previous'\n  };\n  return map[dm] || 'Unknown';\n}\n\nvar doHdr = function(hdr) {\n  log('Header:');\n  log('  Version: %s', hdr.ver);\n  log('  Size: %dx%d', hdr.width, hdr.height);\n  log('  GCT? %s%s', showBool(hdr.gctFlag), hdr.gctFlag ? ' (' + hdr.gct.length + ' entries)' : '');\n  log('  Color resolution: %d', hdr.colorRes);\n  log('  Sorted? %s', showBool(hdr.sorted));\n  log('  Background color: %s (%d)', hdr.gctFlag ? showColor(hdr.bgColor) : 'no GCT', hdr.bgColor);\n  log('  Pixel aspect ratio: %d FIXME', hdr.pixelAspectRatio);\n};\n\nvar doGCE = function(gce) {\n  log('GCE:');\n  log('  Disposal method: %d (%s)', gce.disposalMethod, showDisposalMethod(gce.disposalMethod));\n  log('  User input expected? %s', showBool(gce.userInput));\n  log('  Transparency given? %s%s', showBool(gce.transparencyGiven),\n                                    gce.transparencyGiven ? ' (index: ' + gce.transparencyIndex + ')' : '');\n  log('  Delay time: %d', gce.delayTime);\n};\n\nvar doImg = function(img) {\n  log('Image descriptor:');\n  log('  Geometry: %dx%d+%d+%d', img.width, img.height, img.leftPos, img.topPos);\n  log('  LCT? %s%s', showBool(img.lctFlag), img.lctFlag ? ' (' + img.lct.length + ' entries)' : '');\n  log('  Interlaced? %s', showBool(img.interlaced));\n  log('  %d pixels', img.pixels.length);\n};\n\nvar doNetscape = function(block) {\n  log('Netscape application extension:');\n  log('  Iterations: %d%s', block.iterations, block.iterations === 0 ? ' (infinite)' : '');\n};\n\nvar doCom = function(com) {\n  log('Comment extension:');\n  log('  Comment: \u001b[31m%s\u001b[0m', com.comment);\n};\n\nvar doEOF = function(eof) {\n  log('EOF');\n};\n\nvar doUnknownApp = function(block) {\n};\n\nvar doUnknownExt = function(block) {\n}\n\nvar handler = {\n  hdr: doHdr,\n  img: doImg,\n  gce: doGCE,\n  com: doCom,\n  app: {\n    NETSCAPE: doNetscape,\n    unknown: doUnknownApp\n  },\n  eof: doEOF\n};\n\n\nprocess.argv.forEach(function (arg, i) { // Not an array?!\n  if (i > 1) {\n    util.puts(arg);\n    util.puts((function (n) { var s = ''; for (var i = 0; i < n; i++) { s += '-'; }; return s; }(arg.length))); // XXX\n    var data = require('fs').readFileSync(arg).toString('binary');\n    var stream = new Stream(data);\n    parseGIF(stream, handler);\n  }\n});\n"]}