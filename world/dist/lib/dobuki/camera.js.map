{"version":3,"sources":["../../../lib/dobuki/camera.js"],"names":["global","factory","exports","module","define","amd","DOK","window","core","camera","camera2d","THREE","OrthographicCamera","innerWidth","innerHeight","camera3d","PerspectiveCamera","cameraQuaternionData","array","Float32Array","forwardMovement","Vector3","version","lastQuat","Quaternion","tempQuat","tempQuatArray","upVector","groundQuat","setFromAxisAngle","Math","PI","requireScripts","logScript","getCamera","nop","setCamera3d","value","copyCamera","updateQuaternionData","quaternion","toArray","set","applyQuaternion","getCameraQuaternionData","equals","copy","initCameras","position","isCamera3d","from","to","getCameraPosition","setCameraPosition","data","is3d","fromArray","updateProjectionMatrix","shadowQuatArray","x","y","angle","atan2","z","multiply","destroyEverything","combineMethods","addEventListener","gameWidth","gameHeight","left","right","top","bottom","aspect"],"mappings":"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","file":"camera.js","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n        typeof define === 'function' && define.amd ? define(['exports'], factory) :\n            (factory((global.DOK = global.DOK || {}), global));\n}(window, function (core, global) {\n    'use strict';\n    var camera;\n    var camera2d = new THREE.OrthographicCamera(-innerWidth / 2, innerWidth / 2, innerHeight / 2, -innerHeight / 2, 0.1, 1000000);\n    var camera3d = new THREE.PerspectiveCamera(75, innerWidth / innerHeight, 0.1, 1000000);\n    var cameraQuaternionData = {\n            array: new Float32Array(4),\n            forwardMovement: new THREE.Vector3(0, 0, 1),\n            version: 0,\n        }, lastQuat = new THREE.Quaternion(), tempQuat = new THREE.Quaternion(),\n        tempQuatArray = new Float32Array(4), upVector = new THREE.Vector3(0, 1, 0);\n    var groundQuat = new THREE.Quaternion().setFromAxisAngle(\n        new THREE.Vector3(1, 0, 0), -Math.PI / 2\n    );\n\n    /**\n     *  HEADER\n     */\n    core.requireScripts([\n        'setup.js',\n    ]);\n    core.logScript();\n\n    /**\n     *  FUNCTION DEFINITIONS\n     */\n    function getCamera() {\n        return camera;\n    }\n\n    function nop() {\n    }\n\n    function setCamera3d(value) {\n        if (value && camera !== camera3d) {\n            camera = camera3d;\n            copyCamera(camera2d, camera);\n        } else if (!value && camera === camera3d) {\n            camera = camera2d;\n            copyCamera(camera3d, camera);\n        }\n        updateQuaternionData();\n    }\n\n    function updateQuaternionData() {\n        camera.quaternion.toArray(cameraQuaternionData.array);\n        cameraQuaternionData.forwardMovement.set(0, 0, 1);\n        cameraQuaternionData.forwardMovement.applyQuaternion(camera.quaternion);\n    }\n\n    function getCameraQuaternionData() {\n        if (!camera.quaternion.equals(lastQuat)) {\n            updateQuaternionData();\n            lastQuat.copy(camera.quaternion);\n        }\n        return cameraQuaternionData;\n    }\n\n    function initCameras() {\n        camera2d.position.set(0, 0, 400);\n        camera3d.position.set(0, 0, 400);\n    }\n\n    function isCamera3d() {\n        return camera === camera3d;\n    }\n\n    function copyCamera(from, to) {\n        to.position.copy(from.position);\n        to.quaternion.copy(from.quaternion);\n    }\n\n    function getCameraPosition() {\n        return {\n            'is3d': isCamera3d(),\n            'position': camera.position.toArray(),\n            'quaternion': camera.quaternion.toArray(),\n        };\n    }\n\n    function setCameraPosition(data) {\n        setCamera3d(data.is3d);\n        camera.quaternion.fromArray(data.quaternion);\n        camera.position.fromArray(data.position);\n        camera.updateProjectionMatrix();\n    }\n\n    function shadowQuatArray(x, y) {\n        var angle = -Math.atan2(y - camera.position.z, x - camera.position.x) - Math.PI / 2;\n        tempQuat.setFromAxisAngle(upVector, angle);\n        tempQuat.multiply(groundQuat);\n        return tempQuat.toArray(tempQuatArray);\n    }\n\n    function destroyEverything() {\n    }\n\n    /**\n     *  PUBLIC DECLARATIONS\n     */\n    core.setCamera3d = setCamera3d;\n    core.isCamera3d = isCamera3d;\n    core.getCamera = getCamera;\n    core.setCameraPosition = setCameraPosition;\n    core.getCameraPosition = getCameraPosition;\n    core.getCameraQuaternionData = getCameraQuaternionData;\n    core.shadowQuatArray = shadowQuatArray;\n    core.destroyEverything = core.combineMethods(destroyEverything, core.destroyEverything);\n\n    /**\n     *   PROCESSES\n     */\n    window.addEventListener(\"resize\", function () {\n        var gameWidth = innerWidth;\n        var gameHeight = innerHeight;\n        camera2d.left = -gameWidth / 2;\n        camera2d.right = gameWidth / 2;\n        camera2d.top = gameHeight / 2;\n        camera2d.bottom = -gameHeight / 2;\n        camera2d.updateProjectionMatrix();\n        camera3d.aspect = gameWidth / gameHeight;\n        camera3d.updateProjectionMatrix();\n    });\n\n    initCameras();\n    setCamera3d(true);\n}));"]}