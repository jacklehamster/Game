{"version":3,"sources":["../../../lib/dobuki/setup.js"],"names":["global","factory","console","log","exports","define","module","amd","DOK","core","logScript","currentScript","getCurrentScript","loadedScripts","filename","fixPath","regex","exec","location","pathname","window","history","pushState","search","hash","getLastScript","scripts","document","getElementsByTagName","length","src","match","path","changeScene","scene","htmlFile","destroyEverything","replace","handleError","error","soft","Array","isArray","array","i","push","apply","lastError","Error","checkScriptLoaded","script","loaded","THREE","parseGIF","Stream","md5","math","stripJsonComments","requireScripts","forEach","combineMethods","firstMethod","secondMethod","expectParams","args","assert","arguments","type","split","indexOf","checkParams","condition","message","cleanUp","setupExit","onbeforeunload"],"mappings":"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","file":"setup.js","sourcesContent":["(function (global, factory) {\n    console.log(typeof(exports), typeof(define), global);\n\n \ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n \ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n \t(factory((global.DOK = global.DOK || {})));\n }(this, (function (core) { 'use strict';\n    /**\n     *  FUNCTION DEFINITIONS\n     */\n   function logScript() {\n       var currentScript = getCurrentScript();\n       loadedScripts[currentScript.filename] = true;\n       console.log(currentScript.filename);\n   }\n   \n   function fixPath() {\n       var regex = /\\/$|index\\.html$|next\\.html$/g;\n       if (!regex.exec(location.pathname)) {\n           window.history.pushState(null,\"\", location.pathname+\"/\"+location.search+location.hash);\n       }\n   }\n\n   function getLastScript() {\n       var scripts = document.getElementsByTagName('script');\n       return scripts[scripts.length-1];\n   }\n\n   function getCurrentScript() {\n        var currentScript = getLastScript().src;\n        var regex = /[a-zA-Z-]*:\\/\\/[^/]+(\\/([^/]+\\/)+)(.+)/g;\n        var match = regex.exec(currentScript);\n        return !match ? null : {\n            filename: match[3],\n            path: match[1],\n            src: match[0],\n        };\n   }\n   \n   function changeScene(scene, htmlFile) {\n        if(typeof(htmlFile)==='undefined') {\n            htmlFile = 'scene.html';\n        }\n        core.destroyEverything();\n        location.replace(\"../\" + scene + \"/\" + htmlFile);\n   }\n   \n   function handleError(error, soft) {\n        if(Array.isArray(error)) {\n            var array = [];\n            for(var i=0;i<error.length;i++) {\n                array.push(error[i]);\n                array.push(\"\\n \");\n            }\n            console.error.apply(null, array);\n        } else {\n            console.error(error);\n        }\n        core.lastError = error;\n        if(!soft) {\n            throw new Error(\"Last error terminated the process.\");\n        }\n   }\n   \n   function checkScriptLoaded(script) {\n        var loaded = false;\n        switch(script) {\n            case 'threejs':\n                loaded = window.THREE;\n                break;\n            case 'jsgif':\n                loaded = window.parseGIF||window.Stream;\n                break;\n            case 'md5':\n                loaded = window.md5;\n                break;\n            case 'mathjs':\n                loaded = window.math;\n                break;\n            case 'stripJsonComments':\n                loaded = window.stripJsonComments;\n                break;\n            default:\n                loaded = loadedScripts[script];\n        }\n        if(!loaded) {\n            core.handleError([\"Unable to load \" + getCurrentScript().filename, \"Script required: \" + script]);\n        }\n   }\n   \n   var loadedScripts = {};\n   function requireScripts(scripts) {\n       return;\n        scripts.forEach(checkScriptLoaded);\n   }\n   \n   function destroyEverything() {\n        loadedScripts = {};\n   }\n   \n   function combineMethods(firstMethod, secondMethod) {\n        return function() {\n            if(firstMethod)\n                firstMethod();\n            if(secondMethod)\n                secondMethod();\n        };\n   }\n   \n   function expectParams(args) {\n        assert(typeof(args) === 'object', \"Pass 'arguments' to expectParams\");\n        \n        for(var i=1; i<arguments.length; i++) {\n            var type = args[i-1]===null? 'null' : Array.isArray(args[i-1])?'array' : typeof(args[i-1]);\n            assert(\n                arguments[i].split(\"|\").indexOf(type)>=0,\n                [\"Expected argument \"+(i-1)+\" to be \"+arguments[i]+\" NOT \"+type, args]\n            );\n        }\n   }\n\n   function checkParams(args) {\n        assert(typeof(args) === 'object', \"Pass 'arguments' to expectParams\");\n        \n        for(var i=1; i<arguments.length; i++) {\n            var type = args[i-1]===null? 'null' : Array.isArray(args[i-1])?'array' : typeof(args[i-1]);\n            if(arguments[i].split(\"|\").indexOf(type)<0) {\n                return false;\n            }\n        }\n        return true;\n   }\n   \n   function assert(condition, message) {\n        if(!condition) {\n            handleError(message ? message: \"Assert failed: condition not met.\");\n        }\n   }\n\n   function cleanUp() {\n       console.log(\"here\");\n       core.destroyEverything();\n   }\n\n   function setupExit() {\n       document.onbeforeunload = window.onbeforeunload = cleanUp;\n   }\n   \n    /**\n     *  PUBLIC DECLARATIONS\n     */\n   core.getCurrentScript = getCurrentScript;\n   core.logScript = logScript;\n   core.handleError = handleError;\n   core.requireScripts = requireScripts;\n   core.changeScene = changeScene;\n   core.destroyEverything = destroyEverything;\n   core.combineMethods = combineMethods;\n   core.expectParams = expectParams;\n   core.checkParams = checkParams;\n   core.assert = assert;\n\n   \n   /**\n    *   PROCESSES\n    */\n    fixPath();\n    core.logScript();\n    setupExit();\n })));\n"]}