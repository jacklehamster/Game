{"version":3,"sources":["../../../lib/dobuki/triggerloop.js"],"names":["global","factory","exports","module","define","amd","DOK","core","count","triggers","requireScripts","logScript","trigger","cell","length","addLoop","triggerLoop","indexOf","push","untrigger","index","triggered","clearTriggers","removed","i","loop","j","removeLoop","destroyEverything","combineMethods"],"mappings":";;;;AAAC,WAAUA,MAAV,EAAkBC,OAAlB,EAA2B;AAC1B,YAAOC,OAAP,yCAAOA,OAAP,OAAmB,QAAnB,IAA+B,OAAOC,MAAP,KAAkB,WAAjD,GAA+DF,QAAQC,OAAR,CAA/D,GACA,OAAOE,MAAP,KAAkB,UAAlB,IAAgCA,OAAOC,GAAvC,GAA6CD,OAAO,CAAC,SAAD,CAAP,EAAoBH,OAApB,CAA7C,GACCA,QAASD,OAAOM,GAAP,GAAaN,OAAOM,GAAP,IAAc,EAApC,CAFD;AAGA,CAJD,aAIS,UAAUC,IAAV,EAAgB;AAAE;;AAExB,QAAIC,QAAQ,CAAZ;AACA,QAAIC,WAAW,EAAf;;AAEA;;;AAGAF,SAAKG,cAAL,CAAoB,CAChB,UADgB,EAEhB,SAFgB,CAApB;AAIAH,SAAKI,SAAL;;AAEA;;;AAGA,aAASC,OAAT,CAAiBC,IAAjB,EAAuB;AACnB,YAAI,CAACJ,SAASK,MAAd,EAAsB;AAClBR,gBAAIS,OAAJ,CAAYC,WAAZ;AACH;AACD,YAAIP,SAASQ,OAAT,CAAiBJ,IAAjB,IAAuB,CAA3B,EAA8B;AAC1BJ,qBAASS,IAAT,CAAcL,IAAd;AACH;AACJ;;AAED,aAASM,SAAT,CAAmBN,IAAnB,EAAyB;AACrB,YAAIO,QAAQX,SAASQ,OAAT,CAAiBJ,IAAjB,CAAZ;AACA,YAAIO,SAAO,CAAX,EAAc;AACVX,qBAASW,KAAT,IAAkB,IAAlB;AACH;AACJ;;AAED,aAASC,SAAT,CAAmBR,IAAnB,EAAyB;AACrB,eAAOJ,SAASQ,OAAT,CAAiBJ,IAAjB,KAA0B,CAAjC;AACH;;AAED,aAASS,aAAT,GAAyB;AACrBb,iBAASK,MAAT,GAAkB,CAAlB;AACH;;AAED,aAASE,WAAT,GAAuB;AACnB,YAAIO,UAAU,KAAd;AACA,aAAI,IAAIC,IAAI,CAAZ,EAAeA,IAAIf,SAASK,MAA5B,EAAoCU,GAApC,EAAyC;AACrC,gBAAGf,SAASe,CAAT,KAAef,SAASe,CAAT,EAAYC,IAA9B,EAAoC;AAChC,oBAAGhB,SAASe,CAAT,EAAYC,IAAZ,OAAuB,KAA1B,EAAiC;AAC7B,2BAAOhB,SAASe,CAAT,CAAP;AACAD,8BAAU,IAAV;AACH;AACJ;AACJ;AACD,YAAIA,OAAJ,EAAa;AACT,gBAAIG,IAAI,CAAR;AACA,iBAAIF,IAAE,CAAN,EAASA,IAAEf,SAASK,MAApB,EAA2BU,GAA3B,EAAgC;AAC5B,oBAAGf,SAASiB,CAAT,CAAH,EAAgB;AACZjB,6BAASiB,CAAT,IAAcjB,SAASe,CAAT,CAAd;AACAE;AACH;AACJ;AACDjB,qBAASK,MAAT,GAAkBY,CAAlB;AACA,gBAAI,CAACjB,SAASK,MAAd,EAAsB;AAClBR,oBAAIqB,UAAJ,CAAeX,WAAf;AACH;AACJ;AACJ;;AAED,aAASY,iBAAT,GAA6B;AACzBN;AACH;;AAED;;;AAGAf,SAAKK,OAAL,GAAeA,OAAf;AACAL,SAAKY,SAAL,GAAiBA,SAAjB;AACAZ,SAAKc,SAAL,GAAiBA,SAAjB;AACAd,SAAKe,aAAL,GAAqBA,aAArB;AACAf,SAAKqB,iBAAL,GAAyBrB,KAAKsB,cAAL,CAAoBD,iBAApB,EAAuCrB,KAAKqB,iBAA5C,CAAzB;;AAEA;;;AAIF,CAvFD,CAAD","file":"triggerloop.js","sourcesContent":["(function (global, factory) {\n \ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n \ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n \t(factory((global.DOK = global.DOK || {})));\n }(this, (function (core) { 'use strict';\n    \n    var count = 0;\n    var triggers = [];\n    \n    /**\n     *  HEADER\n     */   \n    core.requireScripts([\n        'setup.js',\n        'loop.js',\n    ]);\n    core.logScript();\n\n    /**\n     *  FUNCTION DEFINITIONS\n     */   \n    function trigger(cell) {\n        if (!triggers.length) {\n            DOK.addLoop(triggerLoop);\n        }\n        if (triggers.indexOf(cell)<0) {\n            triggers.push(cell);\n        }\n    }\n\n    function untrigger(cell) {\n        var index = triggers.indexOf(cell);\n        if (index>=0) {\n            triggers[index] = null;\n        }\n    }\n\n    function triggered(cell) {\n        return triggers.indexOf(cell) >= 0;\n    }\n    \n    function clearTriggers() {\n        triggers.length = 0;\n    }\n    \n    function triggerLoop() {\n        var removed = false;\n        for(var i = 0; i < triggers.length; i++) {\n            if(triggers[i] && triggers[i].loop) {\n                if(triggers[i].loop() === false) {\n                    delete triggers[i];\n                    removed = true;\n                }\n            }\n        }\n        if (removed) {\n            var j = 0;\n            for(i=0; i<triggers.length;i++) {\n                if(triggers[j]) {\n                    triggers[j] = triggers[i];\n                    j++;\n                }\n            }\n            triggers.length = j;\n            if (!triggers.length) {\n                DOK.removeLoop(triggerLoop);\n            }\n        }\n    }\n    \n    function destroyEverything() {\n        clearTriggers();\n    }\n   \n    /**\n     *  PUBLIC DECLARATIONS\n     */\n    core.trigger = trigger;\n    core.untrigger = untrigger;\n    core.triggered = triggered;\n    core.clearTriggers = clearTriggers;\n    core.destroyEverything = core.combineMethods(destroyEverything, core.destroyEverything);\n\n    /**\n     *   PROCESSES\n     */\n\n })));"]}