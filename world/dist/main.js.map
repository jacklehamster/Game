{"version":3,"sources":["../main.js"],"names":["require","THREE","DOK","window","debug","fps","location","search","indexOf","document","getElementById","style","display","engine","Engine","canvas","images","squid","normal","toUrl","shadow","floor","lava","sand","water","sprite","border","SpriteSheet","preLoad","getBorderedImage","index","spritesheet","cut","getCut","url","spriteRenderer","SpriteRenderer","scene","add","mesh","curvature","range","cellSize","renderer","setClearColor","roundabout","Utils","Roundabout","closestPoint","x","y","getClosestSpritePosition","limit","Math","round","reset","i","pos","next","sprites","spriteCollection","get","empty","obj","picked","uid","pickedItem","mouseControl","selectedObj","getSelected","xPos","mousePos","yPos","getCamPos","camera","position","collection","Collection","type","width","height","frame","Loop","time","sel","selected","spritePos","light","wave","anim","img","abs","length","SpriteObject","create","Camera","quaternions","southQuaternionArray","spriteSelection","spriteCubes","spriteCube","spriteInfo","size","options","pickedMe","random","push","westQuaternionArray","eastQuaternionArray","forEach","setTypeCube","spriteObj","spriteFace","createSpriteCollection","spriteFunction","call","ss","getCamera","camGoal","Vector3","createSprite","cancel","e","event","mouseMoveTo","pageX","pageY","preventDefault","drop","dt","dataTransfer","reader","FileReader","file","files","addEventListener","Image","src","result","readAsDataURL","mouseMoveToVector","mouseVector","set","innerWidth","innerHeight","unproject","dir","sub","normalize","distance","z","copy","multiplyScalar","find","move","setIndexProcessor","count","image","zIndex","spriteObject","zoombar","zoomState","angle","setMouseControl","Mouse","setOnWheel","dx","dy","max","min","setOnZoom","pinchSize","setOnTouch","down","updateCamera","rotation","hero","speed","centerCam","addLoop","mov","Keyboard","getMove","dist","sqrt","actorsList","actors","array","actor","animation","callback","getSprite","Array","isArray","ready","updateGraphics","textContent"],"mappings":"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","file":"main.js","sourcesContent":["require([\n    'threejs',\n    'dobuki',\n], function(THREE, DOK) {\n    window.DOK = DOK;\n\n    const debug = {\n        fps: location.search.indexOf(\"fps\")>=0,\n    };\n\n    document.getElementById(\"fps\").style.display = debug.fps ? \"\" : \"none\";\n\n    const engine = new DOK.Engine({\n        canvas: document.getElementById('abc'),\n    });\n\n    const images = {\n        squid: {\n            normal:[\n                require.toUrl(\"https://jacklehamster.github.io/dok/images/squid.png|0,0,32,32\"),\n                require.toUrl(\"https://jacklehamster.github.io/dok/images/squid.png|32,0,32,32\"),\n                require.toUrl(\"https://jacklehamster.github.io/dok/images/squid.png|0,32,32,32\"),\n                require.toUrl(\"https://jacklehamster.github.io/dok/images/squid.png|32,32,32,32\"),\n            ],\n            shadow:[\n                require.toUrl(\"https://jacklehamster.github.io/dok/images/squid.png|0,0,32,32|shadow\"),\n                require.toUrl(\"https://jacklehamster.github.io/dok/images/squid.png|32,0,32,32|shadow\"),\n                require.toUrl(\"https://jacklehamster.github.io/dok/images/squid.png|0,32,32,32|shadow\"),\n                require.toUrl(\"https://jacklehamster.github.io/dok/images/squid.png|32,32,32,32|shadow\"),\n            ],\n        },\n        floor: require.toUrl(\"https://jacklehamster.github.io/dok/images/wood.png\"),\n        lava: require.toUrl('http://localhost/~vincent/game/world/lava.png'),\n        sand: [\n            require.toUrl('http://localhost/~vincent/game/world/gold.jpg'),\n            require.toUrl('http://localhost/~vincent/game/world/gold.jpg|scale:-1,1'),\n            require.toUrl('http://localhost/~vincent/game/world/gold.jpg|scale:1,-1'),\n            require.toUrl('http://localhost/~vincent/game/world/gold.jpg|scale:-1,-1'),\n        ],\n        water: [\n            require.toUrl(\"http://localhost/~vincent/game/world/water.jpg\"),\n            require.toUrl(\"http://localhost/~vincent/game/world/water.jpg|scale:-1,1\"),\n            require.toUrl(\"http://localhost/~vincent/game/world/water.jpg|scale:1,-1\"),\n            require.toUrl(\"http://localhost/~vincent/game/world/water.jpg|scale:-1,-1\"),\n        ],\n        sprite: [\n        ],\n        border: [\n        ],\n    };\n    DOK.SpriteSheet.preLoad(images);\n\n    function getBorderedImage(index) {\n        if(index in DOK.SpriteSheet.spritesheet.border) {\n            return DOK.SpriteSheet.spritesheet.border[index];\n        }\n        const cut = DOK.SpriteSheet.getCut(index);\n        images.border[index] = cut.url + \"|border:10%\";\n        DOK.SpriteSheet.preLoad(images);\n        return DOK.SpriteSheet.spritesheet.border[index];\n    }\n\n\n    const spriteRenderer = new DOK.SpriteRenderer();\n    engine.scene.add(spriteRenderer.mesh);\n    window.spriteRenderer = spriteRenderer;\n    spriteRenderer.curvature = .5;\n//    spriteRenderer.bigwave = 15;\n\n\n\n    //    var mouse = {x:0,y:0};\n    /*    document.addEventListener(\"mousemove\", function(e) {\n     mouse.x = e.pageX - innerWidth/2;\n     mouse.y = e.pageY - innerHeight/2;\n     e.preventDefault();\n     });\n     */\n\n    const range = 50;\n    const cellSize = 256;\n    engine.renderer.setClearColor (0xffffff, 1);\n\n\n    const roundabout = new DOK.Utils.Roundabout();\n    const closestPoint = { x:0,y:0};\n    function getClosestSpritePosition(x,y,limit) {\n        x = Math.round(x);\n        y = Math.round(y);\n        roundabout.reset();\n        //        console.log(x,y);\n\n        for(let i=0; i<limit; i++) {\n            const pos = roundabout.next();\n            const sprites = spriteCollection.get(x+pos[0],y+pos[1]);\n            if(sprites && !empty(sprites)) {\n                closestPoint.x = x+pos[0];\n                closestPoint.y = y+pos[1];\n                return closestPoint;\n            }\n        }\n        return null;\n    }\n\n    function empty(obj) {\n        for(let i in obj) {\n            return false;\n        }\n        return true;\n    }\n\n    function picked(obj) {\n        return obj.uid === pickedItem;\n    }\n\n\n    let mouseControl = false;\n    const selectedObj = { x: 0, y: 0};\n    function getSelected() {\n        if(!mouseControl) {\n            return null;\n        }\n        //        var xPos = camera.position.x + mouse.x * 2;\n        //        var yPos = camera.position.y - 2 * mouse.y;\n\n        const xPos = mousePos.x;\n        const yPos = mousePos.y;\n        if(selectedObj.x !== Math.round(xPos/cellSize) || selectedObj.y !== Math.round(yPos/cellSize)) {\n            selectedObj.x = Math.round(xPos/cellSize);\n            selectedObj.y = Math.round(yPos/cellSize);// + 6;\n        }\n        return selectedObj;\n    }\n\n    function getCamPos() {\n        const xPos = camera.position.x;\n        const yPos = camera.position.y;\n\n        selectedObj.x = Math.round(xPos/cellSize);\n        selectedObj.y = Math.round(yPos/cellSize) + 6;\n        return selectedObj;\n    }\n\n    const collection = new DOK.Collection(\n        {\n            type: \"grid\",\n            get x() {\n                return getCamPos().x -Math.floor(range/2);\n            },\n            get y() {\n                return getCamPos().y -Math.floor(range/2);\n            },\n            width: range,\n            height: range,\n        },\n        function(x,y) {\n            const frame = Math.floor(DOK.Loop.time/100);\n            const sel = getSelected();\n            const selected = sel && !spritePos && pickedItem===null && sel.x === x && sel.y === y;\n            const light = .7;\n            const wave = 0;\n            const anim = DOK.SpriteSheet.spritesheet.sand;\n            let img = anim[Math.abs(x*13^y*7)%anim.length];\n            if(selected && Math.floor(DOK.Loop.time/10)%4!==0) {\n                img = getBorderedImage(img);\n            }\n\n            return DOK.SpriteObject.create(\n                x*cellSize,y*cellSize,0,//c!==0?0:-64,\n                cellSize,cellSize,\n                DOK.Camera.quaternions.southQuaternionArray,\n                img,\n                light,//c!==0?1:1.5,\n                wave,//15,\n            );\n        }\n    );\n\n    function spriteSelection() {\n        const sel = spritePos;\n        return sel ? spriteCollection.get(sel.x,sel.y) : null;\n    }\n\n    const spriteCubes = [];\n    function spriteCube(spriteInfo) {\n        const x = spriteInfo.x;\n        const y = spriteInfo.y;\n        const index = spriteInfo.index;\n        const size = this.options.cellSize*3;\n        const pickedMe = picked(spriteInfo);\n        const light = pickedMe ? Math.random() : 1;\n        //spritePos && Math.floor(x)===spritePos.x&& Math.floor(y)===spritePos.y ? Math.random() : 1;\n        const selected = spritePos && Math.floor(x)===spritePos.x&& Math.floor(y)===spritePos.y;\n        let img = DOK.SpriteSheet.spritesheet.sprite[index];\n        if(!pickedMe && selected && Math.floor(DOK.Loop.time/10)%4!==0) {\n            img = getBorderedImage(img);\n        }\n\n        spriteCubes.push(DOK.SpriteObject.create(\n            x*cellSize,y*cellSize,size/2,\n            size,size,\n            DOK.Camera.quaternions.southQuaternionArray,\n            img,\n            light,\n            15,\n        ));\n        spriteCubes.push(DOK.SpriteObject.create(\n            x*cellSize-10,y*cellSize,size/2,\n            size,size,\n            DOK.Camera.quaternions.westQuaternionArray,\n            img,\n            light,\n            15,\n        ));\n        spriteCubes.push(DOK.SpriteObject.create(\n            x*cellSize+10,y*cellSize,size/2,\n            size,size,\n            DOK.Camera.quaternions.eastQuaternionArray,\n            img,\n            light,\n            15,\n        ));\n        spriteCubes.push(DOK.SpriteObject.create(\n            x*cellSize,y*cellSize,size/2,\n            size,size,\n            DOK.Camera.quaternions.eastQuaternionArray,\n            img,\n            light,\n            15,\n        ));\n        spriteCubes.forEach(setTypeCube)\n        return spriteCubes;\n    }\n\n    function setTypeCube(spriteObj) {\n        spriteObj.type = 'face';\n    }\n\n    function spriteFace(spriteInfo) {\n        const x = spriteInfo.x;\n        const y = spriteInfo.y;\n        const index = spriteInfo.index;\n        const size = this.options.cellSize*3;\n        const pickedMe = picked(spriteInfo);\n        const light = pickedMe ? Math.random() : 1;\n        const wave = 0;//15\n        //spritePos && Math.floor(x)===spritePos.x&& Math.floor(y)===spritePos.y ? Math.random() : 1;\n        const selected = spritePos && Math.floor(x)===spritePos.x&& Math.floor(y)===spritePos.y;\n        let img = DOK.SpriteSheet.spritesheet.sprite[index];\n        if(!pickedMe && selected && Math.floor(DOK.Loop.time/10)%4!==0) {\n            img = getBorderedImage(img);\n        }\n\n        const spriteObj = DOK.SpriteObject.create(\n            x*cellSize,y*cellSize,size/2,\n            size,size,\n            null,\n            img,\n            light,\n            wave,\n        );\n        spriteObj.type = \"face\";\n        return spriteObj;\n    }\n\n\n    const spriteCollection = DOK.Collection.createSpriteCollection({\n        cellSize: cellSize,\n        spriteFunction: function(spriteInfo) {\n            switch (spriteInfo.type) {\n                case 'face':\n                    return spriteFace.call(this,spriteInfo);\n                    break;\n                case 'cube':\n                    return spriteCube.call(this,spriteInfo);\n                    break;\n            }\n        },\n    });\n    window.ss = spriteCollection;\n\n    const camera = DOK.Camera.getCamera();\n    //    var mz = 0, rot = 0;\n    const camGoal = {\n        x:camera.position.x, y:camera.position.y,\n    };\n\n    const mousePos = new THREE.Vector3();\n    /*    document.addEventListener(\"mousemove\", function(event) {\n     mouseMoveTo(event.pageX, event.pageY);\n     event.preventDefault();\n     });\n     */\n    let pickedItem = null;\n    /*    document.addEventListener(\"mousedown\", function(event) {\n     for(var uid in spriteSelection()) {\n     pickedItem = uid;\n     }\n     });\n\n     document.addEventListener(\"mouseup\", function(event) {\n     pickedItem = null;\n     });\n     */\n\n    /*\n     var geometry = new THREE.SphereGeometry(3, 50, 50, 0, Math.PI * 2, 0, Math.PI * 2);\n     var material = new THREE.MeshNormalMaterial();\n     var egg = new THREE.Mesh(geometry, material);\n     egg.position.set(0,0,0);\n     egg.geometry.scale(8,10,8);\n     scene.add(egg);\n     */\n\n/*    const request = new XMLHttpRequest();\n    request.open(\"GET\", \"config.json\", true);\n    request.addEventListener(\"load\", function() {\n        const config= JSON.parse(request.responseText);\n        DOK.Camera.setCameraPosition(config.camera);\n    });\n    request.send(null);\n*/\n\n    function createSprite(index) {\n        if(!getSelected()) {\n            return;\n        }\n        const x = getSelected().x; //getCamPos().x,\n        const y = getSelected().y; //getCamPos().y,\n        const spriteInfo = spriteCollection.create(x,y,index);\n        spriteInfo.type = 'face';\n        //        console.log(\"DROPPED\",spriteInfo);\n\n        /*        var geometry = new THREE.SphereGeometry(3, 50, 50, 0, Math.PI * 2, 0, Math.PI * 2);\n         var material = new THREE.MeshNormalMaterial();\n         var egg = new THREE.Mesh(geometry, material);\n         egg.position.set(getSelected().x*64,getSelected().y*64,0);\n         egg.geometry.scale(8,8,8);\n         scene.add(egg);*/\n        /*\n         var geometry = new THREE.PlaneGeometry(1,1);\n         var material = new THREE.MeshNormalMaterial();\n         var egg = new THREE.Mesh(geometry, material);\n         egg.position.set(getSelected().x*64,getSelected().y*64,0);\n         egg.geometry.scale(8,8,8);\n         egg.rotateX(Math.PI);\n         scene.add(egg);\n         */\n        /*\n         return DOK.create(DOK.SpriteObject).init(\n         x*cellSize,y*cellSize,size/2,\n         size,size,\n         null,\n         1,\n         DOK.spritesheet.sprite[index]\n         );\n         */\n    }\n\n    function cancel(e) {\n        e = e || event;\n        //console.log(e.dataTransfer);\n        //        mouse.x = e.pageX - innerWidth/2;\n        //        mouse.y = e.pageY - innerHeight/2;\n        mouseMoveTo(e.pageX, e.pageY);\n        e.preventDefault();\n        return false;\n    }\n\n    function drop(e) {\n        e = e || event;\n        const dt    = e.dataTransfer;\n        let reader = new FileReader();\n        const file = dt.files[0];\n        //        console.log(e);\n        reader.addEventListener( 'loadend', function(e) {\n            //console.log(file.type);\n            if(['image/gif','image/jpeg','image/png'].indexOf(file.type)<0) {\n                return;\n            } else if(file.size>10000000) {\n                return;\n            }\n            const img = new Image();\n            img.addEventListener(\"load\", function(e) {\n                //console.log(img);\n                //        images['floor'] = img.src;\n                const index = images.sprite.length;\n                images.sprite.push(img.src);\n                DOK.SpriteSheet.preLoad(images);\n\n                createSprite(index);\n\n\n                /*            document.getElementById(\"sidebar\").appendChild(img);\n                 img.style.cursor = \"pointer\";\n                 img.addEventListener(\"click\", function(e) {\n                 createSprite(index);\n\n                 });*/\n                //    img.addEventListener(\"click\", function(e) {\n                //\n                //  });\n                //        DOK.preLoad(images);\n                /*        hero[5] = mx - img.naturalWidth/2;\n                 hero[6] = my - img.naturalHeight/2;\n                 hero[7] = img.naturalWidth;\n                 hero[8] = img.naturalHeight;*/\n            });\n\n            img.src = this.result;\n            reader = null;\n        });\n\n        reader.readAsDataURL(file);\n        e.preventDefault();\n        return false;\n    }\n    document.addEventListener('dragover', cancel);\n    document.addEventListener('dragenter', cancel);\n    document.addEventListener('dragleave', cancel);\n    document.addEventListener('drop', drop);\n\n\n    /*\n     var geometry = new THREE.SphereGeometry(3, 50, 50, 0, Math.PI * 2, 0, Math.PI * 2);\n     var material = new THREE.MeshNormalMaterial();\n     var egg = new THREE.Mesh(geometry, material);\n     egg.position.set(0,0,0);\n     egg.geometry.scale(8,10,8);\n     scene.add(egg);\n     */\n\n\n    //    var raycaster = new THREE.Raycaster();\n    ///  var mouse = new THREE.Vector2();\n    let spritePos = null;\n    const mouseMoveToVector = new THREE.Vector3();\n    const mouseVector = new THREE.Vector3();\n    function mouseMoveTo(x,y) {\n        /*        mouse.x = x;\n         mouse.y = y;\n\n         var camera = DOK.getCamera();\n         raycaster.setFromCamera( mouse, camera );\n         var intersects = raycaster.intersectObjects( [spriteRenderer.mesh] );\n\n         if ( intersects.length > 0 ) {\n\n         var intersect = intersects[0];\n         console.log(intersect);\n         egg.position.x = intersect.point.x;\n         egg.position.y = intersect.point.y;\n         egg.position.z = intersect.point.z;\n         }*/\n\n        /*\n         // Parse all the faces\n         for ( var i in intersects ) {\n\n         intersects[ i ].face.material[ 0 ].color.setHex( Math.random() * 0xffffff | 0x80000000 );\n\n         }\n         */\n\n        mouseMoveToVector.set(\n            ( x / window.innerWidth ) * 2 - 1,\n            - ( y / window.innerHeight ) * 2 + 1,\n            0.5 );\n\n        mouseMoveToVector.unproject( camera );\n\n        const dir = mouseMoveToVector.sub( camera.position ).normalize();\n\n        const distance = - camera.position.z / dir.z;\n\n        mouseVector.copy(camera.position);\n        const pos = mouseVector.add( dir.multiplyScalar( distance ) );\n        mousePos.x = pos.x;\n        mousePos.y = pos.y;\n        mousePos.z = pos.z;\n\n\n        if(pickedItem) {\n            spritePos = null;\n            const sprite = spriteCollection.find(pickedItem);\n            sprite.move(pos.x/cellSize, pos.y/cellSize);\n            //            console.log(pickedItem);\n        } else {\n            const sel = getSelected();\n            if(sel) {\n                spritePos = getClosestSpritePosition(sel.x,sel.y,20);\n            }\n//            console.log(spritePos);\n        }\n        //        console.log(spritePos);\n    }\n\n\n\n    DOK.SpriteRenderer.setIndexProcessor(function (images, count) {\n        for(let i=0; i<images.length;i++) {\n            const image = images[i];\n            image.zIndex += image.spriteObject.type===\"face\"\n                ?10000\n                :image.spriteObject.type===\"cube\"\n                    ?10000\n                    :0;\n        }\n    });\n\n\n\n    let zoombar = .7;\n    const zoomState = [\n        { distance: 200, angle: 1.3 },\n        { distance: 1000, angle: .3 },\n    ];\n\n    function setMouseControl() {\n        mouseControl = true;\n\n        DOK.Mouse.setOnWheel(\n            function(dx,dy) {\n                zoombar = Math.max(0,Math.min(1,zoombar - dy/300));\n            }\n        );\n\n        DOK.Mouse.setOnZoom(\n            function(pinchSize) {\n                zoombar = Math.max(0,Math.min(1,zoombar + pinchSize/200));\n            }\n        );\n        DOK.Mouse.setOnTouch(\n            function(dx,dy,down,pageX,pageY) {\n                if(dx!==null && dy!==null) {\n                    if(pickedItem!==null) {\n                        mouseMoveTo(pageX, pageY);\n                    } else if(down) {\n                        camGoal.x = camera.position.x - dx*20;\n                        camGoal.y = camera.position.y + dy*20;\n                    } else {\n                        mouseMoveTo(pageX, pageY);\n                    }\n                    //            mz -= dy/2;\n                    //            rot += (dx/1000);\n                } else {\n                    if(down) {\n                        camGoal.x = camera.position.x;\n                        camGoal.y = camera.position.y;\n                        const sel = spriteSelection();\n                        if(sel) {\n                            for(let i=0; i<sel.length; i++ ) {\n                                pickedItem = sel[i].uid;\n                                break;\n                            }\n                        }\n                    } else {\n                        pickedItem = null;\n                    }\n                }\n            }\n        );\n    }\n\n\n    function updateCamera() {\n        const camera = DOK.Camera.getCamera();\n        camera.position.x += (camGoal.x - camera.position.x) / 3;\n        camera.position.y += (camGoal.y - camera.position.y) / 3;\n        camera.position.z = zoombar*zoomState[0].distance + (1-zoombar)*zoomState[1].distance;\n        camera.rotation.x = zoombar*zoomState[0].angle + (1-zoombar)*zoomState[1].angle;\n    }\n\n    const hero = {x:0,y:0,img:'squid',speed:.05};\n\n    let centerCam = true;\n    DOK.Loop.addLoop(function() {\n        const mov = DOK.Keyboard.getMove();\n        if(mov.x || mov.y) {\n            const dist = Math.sqrt(mov.x*mov.x + mov.y*mov.y);\n            hero.x += mov.x/dist * hero.speed;\n            hero.y += mov.y/dist * hero.speed;\n            centerCam = true;\n        }\n        if(centerCam) {\n            const dx = (hero.x*cellSize - camGoal.x)/5;\n            const dy = (hero.y*cellSize - 1000 - camGoal.y)/5;\n            camGoal.x += dx;\n            camGoal.y += dy;\n            if(Math.abs(dx)<.1 || Math.abs(dy)<.1) {\n                centerCam = false;\n            }\n        }\n    });\n\n\n\n    const actorsList = [\n        hero,\n    ];\n    const actors = new DOK.Collection(\n        {\n            array:[],\n        },\n        function(actor) {\n            const array = this.options.array;\n            array.length = 0;\n            const frame = Math.floor(DOK.Loop.time/100);\n            const light = 1;\n            const wave = 0;\n            const animation = DOK.SpriteSheet.spritesheet[actor.img].normal;\n            let img = animation[frame % animation.length];\n\n            array[0] = DOK.SpriteObject.create(\n                actor.x*cellSize,actor.y*cellSize,0,//c!==0?0:-64,\n                cellSize,cellSize,\n                null,\n                img,\n                light,//c!==0?1:1.5,\n                wave,//15,\n            );\n            array[0].type = 'face';\n\n            return array;\n        },\n        function(callback) {\n            for(let i=0; i<actorsList.length; i++) {\n                const obj = this.getSprite(actorsList[i]);\n                if(Array.isArray(obj)) {\n                    obj.forEach(callback);\n                } else {\n                    callback(obj);\n                }\n            }\n        }\n    );\n\n\n\n//    DOK.Loop.fps = 45;\n    let frame = 0;\n    DOK.Loop.addLoop(function() {\n        if(!engine.ready) {\n            return;\n        }\n        updateCamera();\n        frame++;\n        collection.forEach(spriteRenderer.display);\n        spriteCollection.forEach(spriteRenderer.display);\n        actors.forEach(spriteRenderer.display);\n        spriteRenderer.updateGraphics();\n        if(debug.fps && frame%10===0)\n            document.getElementById(\"fps\").textContent = DOK.Loop.fps + \" fps\";\n    });\n\n    setMouseControl();\n\n});"]}