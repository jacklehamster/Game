{
  "tile-position": {
    "x": {"formula":"round(this.parent.position.x/50)"},
    "y": {"formula":"round(this.parent.position.y/50)"}
  },
  "position": {
    "x":0, "y":0, "z":15
  },
  "rotation": {
    "x":0, "y":0, "z":0
  },
  "action": {
    "switch": { "formula": "model.view.camera.type"},
    "case": {
      "orthographic": {
        "type": "orthographic",
        "up":      { "formula": "anyKeyPressed(87,38)" },  //  W or Up arrow
        "down":     { "formula": "anyKeyPressed(83,40)" },  //  S or Down arrow
        "left":         { "formula": "anyKeyPressed(65,37)" },     //  A or Left
        "right":        { "formula": "anyKeyPressed(68,39)" },     //  D or Right
        "dy":           { "formula": "5 * ((this.up?1:0) + (this.down?-1:0))" },
        "dx":           { "formula": "5 * ((this.left?-1:0) + (this.right?1:0))" }
      },
      "default": {
        "type": "perspective",
        "forward":      { "formula": "anyKeyPressed(87,38)" },  //  W or Forward arrow
        "backward":     { "formula": "anyKeyPressed(83,40)" },  //  S or Back arrow
        "left":         { "formula": "anyKeyPressed(65)" },     //  A
        "right":        { "formula": "anyKeyPressed(68)" },     //  D
        "rotateLeft":   { "formula": "anyKeyPressed(81,37)" },  //  Q or Left arrow
        "rotateRight":  { "formula": "anyKeyPressed(69,39)" },   //  E or Right arrow
        "dz":           { "formula": "5 * ((this.forward?-1:0) + (this.backward?1:0))" },
        "dx":           { "formula": "5 * ((this.left?-1:0) + (this.right?1:0))" },
        "rot":          { "formula": "(Ï€/64) * ((this.rotateLeft?1:0) + (this.rotateRight?-1:0))" },
        "realDZ":       { "formula": "cos(model.player.rotation.y) * this.dz - sin(model.player.rotation.y) * this.dx" },
        "realDX":       { "formula": "cos(model.player.rotation.y) * this.dx + sin(model.player.rotation.y) * this.dz" }
      }
    }
  },
  "updates-perspective": {
    "active": { "js-function": "return DOBUKI.model.player.action.type=='perspective';" },
    "period": 10,
    "update-loop": [
      "this.parent.rotation.y = this.parent.rotation.y + this.parent.action.rot",
      "this.parent.position.x = this.parent.position.x + this.parent.action.realDX",
      "this.parent.position.z = this.parent.position.z + this.parent.action.realDZ"
    ]
  },
  "updates-orthographic": {
    "active": { "js-function": "return DOBUKI.model.player.action.type=='orthographic';" },
    "period": 10,
    "js-loop": {
      "fetch-raw":"player-loop.js"
    }
  }
}